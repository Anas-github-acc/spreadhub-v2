[project]
name = "app"
version = "0.1.0"
description = "sheethub server"
requires-python = ">=3.12"
dependencies = [
    "fastapi[standard]>=0.115.11",
    "sentry-sdk[fastapi]>=2.22.0",
    "httpx<0.28.1",
    "httptools<0.6.4",
    "bcrypt==4.2.1",
    "pydantic>2.0",
    "pydantic-settings<2.7.1",
    "redis==5.0.8",
    "appwrite==5.0.3",
    
]

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
dev-dependencies = [
    "pytest<=8.3.5",
    "mypy<1.15.0",
    "ruff<=0.9.10",
    "pre-commit<4.1.0",
    "types-passlib<1.7.7.20241221",
    "coverage<7.6.12",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py312"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true